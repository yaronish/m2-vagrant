#!/bin/bash
if [ -z $1 ]
then
    echo "Usage: magento [deploy|install|update|clean|tests:unit|tests:integrity|tests:static|tests:integration|selenium:run]"
    exit
else
    COMMAND=$1
fi

#Filesystem
CE_DIR=m2ce
EE_DIR=m2ee
B2B_DIR=b2b

#Magento installation settings
DB_USER='magento'
DB_PASS='123123q'
DB='magento'
DB_PREFIX=''
MYSQL_HOST=localhost
HOST="magetwo.vg"

#XDEBUG SETTINGS
export PHP_IDE_CONFIG="serverName=magetwo.my"
export XDEBUG_CONFIG="idekey=PHPSTORM"
export XDEBUG_CONFIG="remote_enable=1"

echo "Start ${COMMAND}"

DIR_PARAM='magetwo.vg'
DIR_NAME='/var/www/html/'${DIR_PARAM}
ROOT="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
cd ${ROOT}
if [ ${COMMAND} = 'deploy' ]
then
    rm -rf ${DIR_NAME}
    mkdir ${DIR_NAME}
    cp -r /vagrant/${CE_DIR}/* ${DIR_NAME}
    cp -r /vagrant/${CE_DIR}/.[^.]* ${DIR_NAME}
    echo 'Enter edition:'
    read EDITION

    if [ ${EDITION} = 'b2b' ]; then
        cp -r /vagrant/${B2B_DIR}/* ${DIR_NAME}
        cp -r /vagrant/${B2B_DIR}/.[^.]* ${DIR_NAME}
    fi

    if [ ${EDITION} = 'ee' ] || [ ${EDITION} = 'b2b' ]; then
        cp -r /vagrant/${EE_DIR}/* ${DIR_NAME}
        cp -r /vagrant/${EE_DIR}/.[^.]* ${DIR_NAME}
    fi

    if [ -d ${DIR_NAME} ]; then
        cd ${DIR_NAME}
        composer install
    fi
fi

if [ ${COMMAND} = 'install' ]
then
    cd ${DIR_NAME}
    mysql -u${DB_USER} -p${DB_PASS} -h${MYSQL_HOST} -e "DROP DATABASE IF EXISTS ${DB}; CREATE DATABASE ${DB};"
    rm -rf ./var/[a-z]*
    rm -rf ./app/etc/config.php
    rm -rf ./app/etc/env.php
    rm -rf ./pub/static/*
    php bin/magento setup:install --db-host=localhost --db-name=$DB --db-user=${DB_USER} --db-host=${MYSQL_HOST} --db-password=${DB_PASS} --backend-frontname=backend --admin-user=admin --admin-password=123123q --admin-email="admin@example.com" --admin-firstname=Store --admin-lastname=Owner --base-url="http://$HOST/" --language=en_US --timezone="America/Los_Angeles" --currency=USD --use-rewrites=1 --use-secure=0 --admin-use-security-key=0 --key="EncryptionKey"

    mysql -u${DB_USER} -p${DB_PASS} -h${MYSQL_HOST} -e "UPDATE ${DB}.${DB_PREFIX}core_config_data SET value = 0 WHERE path = 'admin/security/use_form_key';"
    mysql -u${DB_USER} -p${DB_PASS} -h${MYSQL_HOST} -e "INSERT INTO ${DB}.${DB_PREFIX}core_config_data(path, value) VALUES('admin/security/session_lifetime', 86400);"
fi

if [ ${COMMAND} = 'update' ]
then
    cd ${DIR_NAME}
    php bin/magento setup:upgrade
fi

if [ ${COMMAND} = 'clean' ]
then
    cd ${DIR_NAME}
    mysql -u${DB_USER} -p${DB_PASS} -h${MYSQL_HOST} -e "DROP DATABASE IF EXISTS ${DB}; CREATE DATABASE ${DB};"
    rm -rf ./var/[a-z]*
    rm -rf ./app/etc/config.php
    rm -rf ./app/etc/env.php
    rm -rf ./pub/static/*
    rm -rf ./var/.maintenance.flag
fi

if [ ${COMMAND} = 'tests:unit' ]
then
    cd ${DIR_NAME}/dev/tests/unit
    phpunit
fi

if [ ${COMMAND} = 'tests:integration' ]
then
    cd ${DIR_NAME}/dev/tests/integration
    phpunit
fi

if [ ${COMMAND} = 'tests:integrity' ]
then
    cd ${DIR_NAME}/dev/tests/integration
    phpunit testsuite/Magento/Test/Integrity
fi

if [ ${COMMAND} = 'tests:static' ]
then
    find /vagrant/b2b -type f | grep php | sed 's/\/vagrant\/b2b\///' > ${DIR_NAME}/dev/tests/static/testsuite/Magento/Test/Php/_files/changed_files_b2b.txt
    cd ${DIR_NAME}/dev/tests/static
    phpunit
fi

if [ ${COMMAND} = 'tests:functional' ]
then
    cd ${DIR_NAME}/dev/tests/functional
    composer install
    php utils/generate.php
    phpunit
fi

if [ ${COMMAND} = 'selenium:run' ]
then
    java -jar /vagrant/selenium-server-2.48.jar
fi
